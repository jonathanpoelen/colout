#!/usr/bin/awk  -OSf
# colout '-po' '^\s*[0-9]+/[0-9]+ Test\s+#[0-9]+: (.*)\s+\.+\s+(Passed)' 'G' '--' '^\s*[0-9]+/[0-9]+ Test\s+#[0-9]+: (.*)\s+\.+(\*{3}.*)\s+.*' 'R'

# created Mon Apr 08 03:19:32 2019

BEGIN {
esc_reset = "\033[0m"
}

{
s = ""
if (match($0, /^\s*[0-9]+\/[0-9]+ Test\s+#[0-9]+: (.*)\s+\.+\s+(Passed)/, a)) {
	c = ";32;1"
	n = length(a) / 3
	if (n == 1) {
		i = 0
		s = s substr($0, 0, RSTART - 1) "\033[" c "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			s = s substr($0, p, start - p) "\033[" c "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
} else if (match($0, /^\s*[0-9]+\/[0-9]+ Test\s+#[0-9]+: (.*)\s+\.+(\*{3}.*)\s+.*/, a)) {
	c = ";31;1"
	n = length(a) / 3
	if (n == 1) {
		i = 0
		s = s substr($0, 0, RSTART - 1) "\033[" c "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			s = s substr($0, p, start - p) "\033[" c "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
}
print s $0
}

