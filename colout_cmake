#!/usr/bin/awk  -OSf
# colout '-po' '^--.*works|^--.*done|^-- Found.*' 'g' '--' '^-- Found.*NO|^--.*broken|^-- Coult NOT find.*|^-- Configuring incomplete, errors occurred!' 'r' '--' '^--.*' 'c' '--' 'CMake Error:' 'r' '--' 'CMake Warning' 'y' '--' '^(Scanning dependencies of target)(.*)$' 'c' 'C' '--' '^(Linking .* )(library|executable) (.*/)*(.+(\.[aso]+)*)$' 'b' 'b' 'B' '--' 'make\[[0-9]+\].*' 'y' '--' '(make: \*\*\* \[.+\] )(.* [0-9]+)' 'r' 'R' '--' '-s' '100' '^(\[\s*[0-9]+%\])' 'Rainbow2' '--' '-c' '^\s(.*Creating.*)$' 'c' '--' '^\s(Built target)(\s.*)$' 'g' 'G' '--' '^\s(Building \w* object)\s+(.*)(\.dir)(.*/)([-]+|\w+).c.*.o$' 'c' 'c' 'c' 'b' 'C' '--' '^\s(Generating)(\s+.*)$' 'c' 'C'

# created Mon Apr 08 03:19:32 2019

BEGIN {
esc_reset = "\033[0m"
colors5[0] = ";36"
colors5[1] = ";36;1"
nb_colors5 = 2
colors6[0] = ";34"
colors6[1] = ";34"
colors6[2] = ";34;1"
nb_colors6 = 3
colors8[0] = ";31"
colors8[1] = ";31;1"
nb_colors8 = 2
colors9[0] = ";38;2;101;77;191"
colors9[1] = ";38;2;89;99;208"
colors9[2] = ";38;2;76;110;219"
colors9[3] = ";38;2;61;130;225"
colors9[4] = ";38;2;47;150;223"
colors9[5] = ";38;2;35;171;215"
colors9[6] = ";38;2;27;190;202"
colors9[7] = ";38;2;25;208;183"
colors9[8] = ";38;2;29;222;162"
colors9[9] = ";38;2;40;234;140"
colors9[10] = ";38;2;58;241;120"
colors9[11] = ";38;2;82;245;102"
colors9[12] = ";38;2;111;246;91"
colors9[13] = ";38;2;143;243;86"
colors9[14] = ";38;2;175;239;90"
colors9[15] = ";38;2;189;223;68"
colors9[16] = ";38;2;207;203;53"
colors9[17] = ";38;2;226;182;46"
colors9[18] = ";38;2;243;160;47"
colors9[19] = ";38;2;255;139;56"
colors9[20] = ";38;2;255;119;70"
colors9[21] = ";38;2;255;101;89"
colors9[22] = ";38;2;255;86;110"
colors9[23] = ";38;2;254;75;130"
colors9[24] = ";38;2;237;67;149"
colors9[25] = ";38;2;216;62;164"
colors9[26] = ";38;2;190;60;174"
colors9[27] = ";38;2;163;60;178"
colors9[28] = ";38;2;135;61;177"
colors9[29] = ";38;2;109;63;169"
nb_colors9 = 30
dscale9 = 100 - 0 + 1
colors11[0] = ";32"
colors11[1] = ";32;1"
nb_colors11 = 2
colors12[0] = ";36"
colors12[1] = ";36"
colors12[2] = ";36"
colors12[3] = ";34"
colors12[4] = ";36;1"
nb_colors12 = 5
colors13[0] = ";36"
colors13[1] = ";36;1"
nb_colors13 = 2
}

{
s = ""
if (match($0, /^--.*works|^--.*done|^-- Found.*/, a)) {
	c = ";32"
	n = length(a) / 3
	if (n == 1) {
		i = 0
		s = s substr($0, 0, RSTART - 1) "\033[" c "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			s = s substr($0, p, start - p) "\033[" c "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
} else if (match($0, /^-- Found.*NO|^--.*broken|^-- Coult NOT find.*|^-- Configuring incomplete, errors occurred!/, a)) {
	c = ";31"
	n = length(a) / 3
	if (n == 1) {
		i = 0
		s = s substr($0, 0, RSTART - 1) "\033[" c "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			s = s substr($0, p, start - p) "\033[" c "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
} else if (match($0, /^--.*/, a)) {
	c = ";36"
	n = length(a) / 3
	if (n == 1) {
		i = 0
		s = s substr($0, 0, RSTART - 1) "\033[" c "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			s = s substr($0, p, start - p) "\033[" c "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
} else if (match($0, /CMake Error:/, a)) {
	c = ";31"
	n = length(a) / 3
	if (n == 1) {
		i = 0
		s = s substr($0, 0, RSTART - 1) "\033[" c "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			s = s substr($0, p, start - p) "\033[" c "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
} else if (match($0, /CMake Warning/, a)) {
	c = ";33"
	n = length(a) / 3
	if (n == 1) {
		i = 0
		s = s substr($0, 0, RSTART - 1) "\033[" c "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			s = s substr($0, p, start - p) "\033[" c "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
} else if (match($0, /^(Scanning dependencies of target)(.*)$/, a)) {
	n = length(a) / 3
	if (n == 1) {
		i = 0
		ic = 0
		s = s substr($0, 0, RSTART - 1) "\033[" colors5[ic % nb_colors5] "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			ic = i - 1
			s = s substr($0, p, start - p) "\033[" colors5[ic % nb_colors5] "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
} else if (match($0, /^(Linking .* )(library|executable) (.*\/)*(.+(\.[aso]+)*)$/, a)) {
	n = length(a) / 3
	if (n == 1) {
		i = 0
		ic = 0
		s = s substr($0, 0, RSTART - 1) "\033[" colors6[ic % nb_colors6] "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			ic = i - 1
			s = s substr($0, p, start - p) "\033[" colors6[ic % nb_colors6] "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
} else if (match($0, /make\[[0-9]+\].*/, a)) {
	c = ";33"
	n = length(a) / 3
	if (n == 1) {
		i = 0
		s = s substr($0, 0, RSTART - 1) "\033[" c "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			s = s substr($0, p, start - p) "\033[" c "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
} else if (match($0, /(make: \*\*\* \[.+\] )(.* [0-9]+)/, a)) {
	n = length(a) / 3
	if (n == 1) {
		i = 0
		ic = 0
		s = s substr($0, 0, RSTART - 1) "\033[" colors8[ic % nb_colors8] "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			ic = i - 1
			s = s substr($0, p, start - p) "\033[" colors8[ic % nb_colors8] "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
} else if (match($0, /^(\[\s*[0-9]+%\])/, a)) {
	n = length(a) / 3
	if (n == 1) {
		i = 0
		s = s substr($0, 0, RSTART - 1) "\033[" colors9[int(((a[i]) - 0) * nb_colors9 / dscale9)] "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			s = s substr($0, p, start - p) "\033[" colors9[int(((a[i]) - 0) * nb_colors9 / dscale9)] "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
}
if (match($0, /^\s(.*Creating.*)$/, a)) {
	c = ";36"
	n = length(a) / 3
	if (n == 1) {
		i = 0
		s = s substr($0, 0, RSTART - 1) "\033[" c "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			s = s substr($0, p, start - p) "\033[" c "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
} else if (match($0, /^\s(Built target)(\s.*)$/, a)) {
	n = length(a) / 3
	if (n == 1) {
		i = 0
		ic = 0
		s = s substr($0, 0, RSTART - 1) "\033[" colors11[ic % nb_colors11] "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			ic = i - 1
			s = s substr($0, p, start - p) "\033[" colors11[ic % nb_colors11] "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
} else if (match($0, /^\s(Building \w* object)\s+(.*)(\.dir)(.*\/)([-]+|\w+).c.*.o$/, a)) {
	n = length(a) / 3
	if (n == 1) {
		i = 0
		ic = 0
		s = s substr($0, 0, RSTART - 1) "\033[" colors12[ic % nb_colors12] "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			ic = i - 1
			s = s substr($0, p, start - p) "\033[" colors12[ic % nb_colors12] "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
} else if (match($0, /^\s(Generating)(\s+.*)$/, a)) {
	n = length(a) / 3
	if (n == 1) {
		i = 0
		ic = 0
		s = s substr($0, 0, RSTART - 1) "\033[" colors13[ic % nb_colors13] "m" a[i] esc_reset
	} else {
		p = 1
		for (i = 1; i < n; ++i) {
			start = a[i, "start"]
			if (start == null) {
				++n
				continue
			}
			ic = i - 1
			s = s substr($0, p, start - p) "\033[" colors13[ic % nb_colors13] "m" a[i] esc_reset
			p = start + a[i, "length"]
		}
		s = s substr($0, p, RSTART + RLENGTH - p)
	}
	$0 = substr($0, RLENGTH + RSTART)
}
print s $0
}


function getdigits(s)
{
sub(/[^0-9]*/, "", s)
return s
}
